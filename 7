import RPi.GPIO as GPIO
from Adafruit_CharLCD import Adafruit_CharLCD
import time

# Keypad pins
ROW_PINS = [16, 20, 21, 5]
COL_PINS = [6, 13, 19, 26]

# Set up keypad
GPIO.setmode(GPIO.BCM)
for row_pin in ROW_PINS:
    GPIO.setup(row_pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
for col_pin in COL_PINS:
    GPIO.setup(col_pin, GPIO.OUT)

# Set up LCD
lcd = Adafruit_CharLCD(address=0x27, cols=16, rows=2, backlight=0,
                       enable=2, rs=3, d4=4, d5=5, d6=6, d7=7,
                       left_to_right=True, cursor=True, blink=False)

# Define keypad map
keys = [
    ['1', '2', '3', 'A'],
    ['4', '5', '6', 'B'],
    ['7', '8', '9', 'C'],
    ['*', '0', '#', 'D']
]

# Set up password
password = '12345'

# Set up variables to track user input
input_str = ''
input_len = 0

# Main loop
while True:
    # Check each key
    for row in range(4):
        for col in range(4):
            # Set row low and col high to read key
            GPIO.output(COL_PINS[col], 0)
            if not GPIO.input(ROW_PINS[row]):
                # Key press detected
                key = keys[row][col]
                if key == '#':
                    # End input
                    break
                elif key == '*':
                    # Clear input
                    input_str = ''
                    input_len = 0
                else:
                    # Add key to input
                    input_str += key
                    input_len += 1
                # Display input on LCD
                lcd.clear()
                lcd.message(input_str)
                # Wait to debounce
                time.sleep(0.5)
            # Set col low
            GPIO.output(COL_PINS[col], 1)
        if key == '#':
            break

    # Check password
    if input_str == password:
        # Correct password
        lcd.clear()
        lcd.message('Correct password')
        time.sleep(2)
        break
    elif input_len == len(password):
        # Incorrect password
        lcd.clear()
        lcd.message('Incorrect password')
        time.sleep(2)
        input_str = ''
        input_len = 0

# Clean up
lcd.clear()
GPIO.cleanup()
