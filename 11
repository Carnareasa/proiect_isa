from gpiozero import DigitalInputDevice, DigitalOutputDevice
from time import sleep
import I2C_LCD_driver

# Set up the keypad columns and rows as input and output devices
col1 = DigitalOutputDevice(17)
col2 = DigitalOutputDevice(18)
col3 = DigitalOutputDevice(27)
col4 = DigitalOutputDevice(22)
row1 = DigitalInputDevice(25)
row2 = DigitalInputDevice(12)
row3 = DigitalInputDevice(13)
row4 = DigitalInputDevice(19)

# Set up the LCD screen
lcd = I2C_LCD_driver.lcd()

# Function to scan the keypad and return the number of the button pressed
def scan_keypad():
     # Turn on one column at a time and check the rows
     for col in range(4):
         if col == 0:
             col1.on()
             col2.off()
             col3.off()
             col4.off()
         elif col == 1:
             col1.off()
             col2.on()
             col3.off()
             col4.off()
         elif col == 2:
             col1.off()
             col2.off()
             col3.on()
             col4.off()
         elif col == 3:
             col1.off()
             col2.off()
             col3.off()
             col4.on()

         # Check if any of the rows are pressed
         if row1.value == 1:
             return col * 4 + 1
         elif row2.value == 1:
             return col * 4 + 2
         elif row3.value == 1:
             return col * 4 + 3
         elif row4.value == 1:
             return col * 4 + 4

     # Return 0 if no button is pressed
     return 0

# Set the password
password = "123456"

# Display a message on the LCD screen
lcd.lcd_display_string("Please enter ", 1, 0)
lcd.lcd_display_string("Password:", 2, 0)

while True:
     # Scan the keypad and get the number of the button pressed
     key = scan_keypad()

     # If a button is pressed, add it to the password input string
     if key != 0:
         pass_input += str(key)
         lcd.lcd_display_string("*" * len(pass_input), 2, 10)

     # If the password is correct, display a message and break out of the loop
     if pass_input == password:
         lcd.lcd_display_string("Correct!", 1, 0)
         lcd.lcd_display_string("Unlocking...", 2, 0)
         sleep(2)
         break

     # If the password is incorrect, display an error message and clear the input
     if len(pass_input) == len(password):
         lcd.lcd_display_string("Incorrect!", 1, 0)
         lcd.lcd_display_string("Try again.", 2, 0)
         pass_input = ""
         sleep(2)
        
     # Clear the LCD screen and display the password prompt again
     lcd.lcd_display_string("Please enter ", 1, 0)
     lcd.lcd_display_string("Password:", 2, 0)
