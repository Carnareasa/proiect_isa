import RPi.GPIO as GPIO
import time

# Set up the GPIO pins for the keypad
COLUMN_PINS = [6, 13, 19, 26]
ROW_PINS = [16, 20, 21, 5]

# Set up the I2C LCD
from i2clibraries import i2c_lcd
lcd = i2c_lcd.i2c_lcd(1, 0x27, 2, 1, 0, 4, 5, 6, 7, 3)

# Set up the password
password = "1234"

# Set up the keypad mapping
keys = [
    ['1', '2', '3', 'A'],
    ['4', '5', '6', 'B'],
    ['7', '8', '9', 'C'],
    ['*', '0', '#', 'D']
]

# Set up the GPIO mode
GPIO.setmode(GPIO.BCM)

# Set up the columns as output pins and the rows as input pins
for col in COLUMN_PINS:
    GPIO.setup(col, GPIO.OUT)
    GPIO.output(col, 1)

for row in ROW_PINS:
    GPIO.setup(row, GPIO.IN, pull_up_down=GPIO.PUD_UP)

# Set up a variable to store the current password input
current_password = ""

# Set up a variable to track if the password is correct
password_correct = False

# Loop forever
while True:
    # Scan the keypad for a button press
    key_pressed = None
    for col in COLUMN_PINS:
        GPIO.output(col, 0)
        for row in ROW_PINS:
            if not GPIO.input(row):
                key_pressed = keys[ROW_PINS.index(row)][COLUMN_PINS.index(col)]
                break
        GPIO.output(col, 1)
        if key_pressed:
            break

    # If a key was pressed, add it to the current password and display it on the LCD
    if key_pressed:
        current_password += key_pressed
        lcd.clear()
        lcd.backlighton()
        lcd.message("Password:\n" + current_password)

    # If the * key was pressed, clear the current password and display a message on the LCD
    if key_pressed == "*":
        current_password = ""
        lcd.clear()
        lcd.backlighton()
        lcd.message("Password cleared")
        time.sleep(1)

    # If the # key was pressed, check if the password is correct and display a message on the LCD
    if key_pressed == "#":
        if current_password == password:
            password_correct = True
            lcd.clear()
            lcd.backlighton()
            lcd.message("Access granted")
            time.sleep(1)
        else:
            current_password = ""
            lcd.clear()
            lcd.backlighton()
            lcd.message("Access denied")
            time.sleep(1)

# If the password is correct, do something (in this example, just turn on an LED)
if password_correct:
    GPIO.setup(17, GPIO.OUT)
    GPIO.output(17, 1)

# Clean up the GPIO pins when the program is finished
GPIO.cleanup()

